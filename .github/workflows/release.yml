name: Release

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.version.outputs.result }}
    steps:
      - id: version
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const tag = "${{ github.event.release.tag_name }}";
            const semver = tag.replace('v', '');
            if (semver.match(/^[0-9]+\.[0-9]+\.[0-9]+$/)) {
                return semver
            }
            throw new Error('not semver, ref: ${context.ref}')
          result-encoding: string

  npm:
    name: Release NPM
    runs-on: ubuntu-latest
    needs: version
    environment: NPM Packages
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version-file: '.nvmrc'

      - run: corepack enable pnpm

      - run: pnpm install --frozen-lockfile

      - run: pnpm -r exec pnpm version ${{ needs.Version.outputs.result }} --git-tag-version=false

      - run: pnpm turbo run build

      - run: npm config set "//registry.npmjs.org/:_authToken" "\${NPM_PACKAGES_TOKEN}" --location=global

      - run: pnpm -r publish --access public --tag latest --no-git-checks
        env:
          NPM_PACKAGES_TOKEN: ${{ secrets.NPM_PACKAGES_TOKEN }}
          NPM_CONFIG_PROVENANCE: true

      - run: npm config delete "//registry.npmjs.org/:_authToken" --location=global
        if: always()

  ghcr:
    name: Release GHCR
    runs-on: ubuntu-latest
    needs: version
    environment: GHCR Packages
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        package:
          - solana-test-validator
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version-file: '.nvmrc'

      - run: corepack enable pnpm

      - run: pnpm install --frozen-lockfile

      - uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3.2.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - uses: docker/setup-qemu-action@5927c834f5b4fdf503fca6f4c7eccda82949e1ee # v3.1.0
        with:
          platforms: linux/amd64,linux/arm64

      - run: docker buildx create --use --bootstrap --driver=docker-container

      - run: pnpm -r exec npm version ${{ needs.version.outputs.result }} --git-tag-version=false

      - run: pnpm --filter=${{ matrix.package }} run push:docker
